{"ast":null,"code":"var _jsxFileName = \"D:\\\\.prog\\\\react\\\\first\\\\src\\\\.components\\\\newTodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTodoForm = _ref => {\n  _s();\n  let {\n    addTodo,\n    groupId\n  } = _ref;\n  const title = useRef(),\n    text = useRef(),\n    endDate = useRef();\n  function setData(e) {\n    e.preventDefault();\n    if (!title.current.value || !text.current.value || !endDate.current.value) return;\n    const currentDate = Moment().format('YYYY-MM-DD');\n    const newTask = {\n      id: Date.now(),\n      groupId: groupId,\n      title: title.current.value,\n      text: text.current.value,\n      startDate: `${currentDate}`,\n      endDate: endDate.current.value,\n      status: \"passive\"\n    };\n    addTodo(newTask);\n    title.current.value = '';\n    text.current.value = '';\n    endDate.current.value = '';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"p-3 pb-1\",\n      border: \"secondary\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"title\",\n        ref: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"text\",\n        ref: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"deadline\",\n        type: \"date\",\n        min: Moment().format('YYYY-MM-DD'),\n        ref: endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-success\",\n        onClick: e => setData(e),\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n_s(NewTodoForm, \"ZwTxBMr0uFo1X19egHFvDlb4JpI=\");\n_c = NewTodoForm;\nexport default NewTodoForm;\nvar _c;\n$RefreshReg$(_c, \"NewTodoForm\");","map":{"version":3,"names":["React","useRef","Button","Form","InputGroup","Moment","NewTodoForm","addTodo","groupId","title","text","endDate","setData","e","preventDefault","current","value","currentDate","format","newTask","id","Date","now","startDate","status"],"sources":["D:/.prog/react/first/src/.components/newTodoForm.js"],"sourcesContent":["import React, {useRef} from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Moment from 'moment'\r\n\r\nconst NewTodoForm = ({addTodo, groupId}) => {\r\n\tconst title = useRef(),\r\n\t\ttext = useRef(),\r\n\t\tendDate = useRef()\r\n\r\n\tfunction setData(e){\r\n\t\te.preventDefault()\r\n\t\tif(!title.current.value || !text.current.value || !endDate.current.value)\r\n\t\t\treturn\r\n\t\tconst currentDate = Moment().format('YYYY-MM-DD')\r\n\t\tconst newTask = {\r\n\t\t\tid: Date.now(),\r\n\t\t\tgroupId: groupId,\r\n\t\t\ttitle: title.current.value,\r\n\t\t\ttext: text.current.value,\r\n\t\t\tstartDate: `${currentDate}`,\r\n\t\t\tendDate: endDate.current.value,\r\n\t\t\tstatus: \"passive\"\r\n\t\t}\r\n\t\taddTodo(newTask)\r\n\r\n\t\ttitle.current.value = ''\r\n\t\ttext.current.value = ''\r\n\t\tendDate.current.value = ''\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<InputGroup className=\"p-3 pb-1\" border=\"secondary\">\r\n\t\t\t\t<Form.Control placeholder='title' ref={title}/>\r\n\t\t\t\t<Form.Control placeholder='text' ref={text}/>\r\n\t\t\t\t<Form.Control placeholder='deadline' type='date' min={Moment().format('YYYY-MM-DD')} ref={endDate}/>\r\n\t\t\t\t<Button variant=\"outline-success\" onClick={e=>setData(e)}>create</Button>\r\n\t\t\t</InputGroup>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewTodoForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,QAAO,OAAO;AACnC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,MAAM,MAAM,QAAQ;AAAA;AAE3B,MAAMC,WAAW,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAACC,OAAO;IAAEC;EAAO,CAAC;EACtC,MAAMC,KAAK,GAAGR,MAAM,EAAE;IACrBS,IAAI,GAAGT,MAAM,EAAE;IACfU,OAAO,GAAGV,MAAM,EAAE;EAEnB,SAASW,OAAO,CAACC,CAAC,EAAC;IAClBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAG,CAACL,KAAK,CAACM,OAAO,CAACC,KAAK,IAAI,CAACN,IAAI,CAACK,OAAO,CAACC,KAAK,IAAI,CAACL,OAAO,CAACI,OAAO,CAACC,KAAK,EACvE;IACD,MAAMC,WAAW,GAAGZ,MAAM,EAAE,CAACa,MAAM,CAAC,YAAY,CAAC;IACjD,MAAMC,OAAO,GAAG;MACfC,EAAE,EAAEC,IAAI,CAACC,GAAG,EAAE;MACdd,OAAO,EAAEA,OAAO;MAChBC,KAAK,EAAEA,KAAK,CAACM,OAAO,CAACC,KAAK;MAC1BN,IAAI,EAAEA,IAAI,CAACK,OAAO,CAACC,KAAK;MACxBO,SAAS,EAAG,GAAEN,WAAY,EAAC;MAC3BN,OAAO,EAAEA,OAAO,CAACI,OAAO,CAACC,KAAK;MAC9BQ,MAAM,EAAE;IACT,CAAC;IACDjB,OAAO,CAACY,OAAO,CAAC;IAEhBV,KAAK,CAACM,OAAO,CAACC,KAAK,GAAG,EAAE;IACxBN,IAAI,CAACK,OAAO,CAACC,KAAK,GAAG,EAAE;IACvBL,OAAO,CAACI,OAAO,CAACC,KAAK,GAAG,EAAE;EAC3B;EAEA,oBACC;IAAA,uBACC,QAAC,UAAU;MAAC,SAAS,EAAC,UAAU;MAAC,MAAM,EAAC,WAAW;MAAA,wBAClD,QAAC,IAAI,CAAC,OAAO;QAAC,WAAW,EAAC,OAAO;QAAC,GAAG,EAAEP;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eAC/C,QAAC,IAAI,CAAC,OAAO;QAAC,WAAW,EAAC,MAAM;QAAC,GAAG,EAAEC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAE,eAC7C,QAAC,IAAI,CAAC,OAAO;QAAC,WAAW,EAAC,UAAU;QAAC,IAAI,EAAC,MAAM;QAAC,GAAG,EAAEL,MAAM,EAAE,CAACa,MAAM,CAAC,YAAY,CAAE;QAAC,GAAG,EAAEP;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACpG,QAAC,MAAM;QAAC,OAAO,EAAC,iBAAiB;QAAC,OAAO,EAAEE,CAAC,IAAED,OAAO,CAACC,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA;EAC7D;IAAA;IAAA;IAAA;EAAA,QACR;AAER,CAAC;AAAC,GApCIP,WAAW;AAAA,KAAXA,WAAW;AAsCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}